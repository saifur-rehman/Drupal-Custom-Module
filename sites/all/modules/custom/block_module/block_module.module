<?php
/**
 * Implements hook_block_info().
 */
function block_module_block_info() {
  $blocks['current_posts'] = array(
    // The name that will appear in the block list.
    'info' => t('Current posts here'),
    // Default setting.
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  return $blocks;
}
// Retrive Data Code
  function block_module_contents() {
    // Today's Date
    $today = getdate();
    // Date a Week Ago
    $start_time = mktime(0, 0, 0, $today['mon'] - 2 , ($today['mday']), $today['year']);
    // Get all posts from past 1 week
    $end_time = time();
    // From Module Configuration
    $max_num = variable_get('current_posts_max', 9);
    // dsm($max_num);
    // Database Api for data retrieving from Database
    $query = db_select('node' , 'n')
    ->fields('n' , array('nid', 'title', 'created'))
    ->condition('status', 1) // shows only published nodes
    ->condition('created', array($start_time, $end_time), 'BETWEEN')
    ->orderBy('created', 'DESC') //Most Recent First
    ->range(0, $max_num) //NEW LINE from configuration
    ->execute();
    return $query;
  }
  function block_module_block_view($delta = '') {
  // This example is adapted from node.module.
  $block = array();
  $count = NULL;
  switch ($delta) {
    case 'current_posts':
      $block['content'] = $count;
      $block['content'] = array(
        'count' => $count,
        'count2' => 'hello',
        );
      $block['subject'] = t('This is my custom block');
      if (user_access('access content')) {
        $result = block_module_contents();
        // Array to carry items for block
        $items = array();
        // Itrate results and form links
        foreach ($result as $node) {
          $count += 1;
          $items[] = array(
            'data' => l($count . ' ' . $node->title , 'node/' . $node->nid),
            );
        }
        // if no results since last week
        if (empty($items)) {
        $block['content'] = '<b>No Data since Last Week</b>';
        }
        else {
          dsm($count);
          //Pass data through theme function.
          $block['content'] = theme('item_list', array(
            '#title' => t('Syndicte'),
            'items' => $items,
            )
          );
          // $block['subject'] = t('Total Nodes are : ' . $count);
        }
      }
      //   break;
  }
  return $block;
}
// Hook Menu Function
  function block_module_menu() {
    $items = array();
    $items['admin/config/content/current_posts'] = array(
      'title' => 'Current Posts',
      // 'description' => 'Configuration',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('block_module_form'),
      'access arguments' => array('access adminitration pages'),
      // 'type' => MENU_NORMAL_ITEM,
      );
    return $items;
  }
  /**
   * Page callback: Current posts settings
   *
   * @see current_posts_menu()
   */
  function block_module_form($form, &$form_state) {
    $form['current_posts_max'] = array(
      '#type' => 'textfield',
      '#title' => t('Maximum number of postsa'),
      '#default_value' => variable_get('current_posts_max', 3),
      '#size' => 2,
      '#maxlength' => 2,
      '#description' => t('The maximum number of links to display in the block.'),
      '#required' => TRUE,
    );

    return system_settings_form($form);
  }
  /**
   * Implements validation from the Form API.
   *
   * @param $form
   *   A structured array containing the elements and properties of the form.
   * @param $form_state
   *   An array that stores information about the form's current state
   *   during processing.
   */
  function block_module_form_validate($form, &$form_state) {
    $max_num = $form_state['values']['current_posts_max'];
    if (!is_numeric($max_num)) {
      form_set_error('current_posts_max', t('You must enter a number for the maximum number of posts to display.'));
    }
    elseif ($max_num <= 0) {
      form_set_error('current_posts_max', t('Maximum number of posts to display must be positive.'));
    }
  }
  /**
   * Implements hook_permission().
   */
  function block_module_permission() {
    return array(
      'access current_posts content' => array(
        'title' => t('Access content for the Current posts module'),
      )
    );
  }
  /**
   * Custom page callback function, declared in current_posts_menu().
   */
  function block_module_page() {
    $result = block_module_contents('page');
    //Array to contain items for the page to render.
    $items = array();
    //Iterate over the resultset and format as links.
    foreach ($result as $node) {
      $items[] = array(
      'data' => l($node->title, 'node/' . $node->nid),
      );
    }
    if (empty($items)) { //No content in the last week.
      $page_array['current_posts_arguments'] = array(
        //Title serves as page subtitle
        '#title' => t('All posts from the last week'),
        '#markup' => t('No posts available.'),
      );
      return $page_array;
    }
      else {
        $page_array['current_posts_arguments'] = array(
          '#title' => t('All posts from the last week'),
          '#items' => $items,
          //Theme hook with suggestion.
          '#theme' => 'item_list__current_posts',
        );
        return $page_array;
      }
    }
